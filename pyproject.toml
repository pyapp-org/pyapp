[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pyapp"
version = "4.14"
description = "A Python application framework - Let us handle the boring stuff!"
authors = ["Tim Savage <tim@savage.company>"]
license = "BSD-3-Clause"
readme = "README.rst"
repository = "https://github.com/pyapp-org/pyapp"
documentation = "https://docs.pyapp.info"
keywords = ["framework", "application"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
packages = [
    { include = "pyapp", from = "src" },
    { include = "tests", format = "sdist" },
]
include = ["HISTORY"]

[tool.poetry.dependencies]
python = "^3.8"
argcomplete = "*"
colorama = "*"
yarl = "*"
importlib_metadata = {version = "*", python = "<=3.9"}

pyyaml = {version = "*", optional = true }
toml = {version = "*", optional = true }

[tool.poetry.dev-dependencies]
pytest = "^8.0"
pytest-cov = "^4.0"
pytest-asyncio = "^0.23"
nox = "*"
sphinx = "^7.1"

[tool.poetry.extras]
yaml = ["pyyaml"]
toml = ["toml"]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/pyapp-org/pyapp/issues"

[tool.poetry.plugins."pytest11"]
"pyapp-pytest" = "pyapp.testing.pytest_plugin"

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
select = ["N", "F", "I", "UP", "PL", "A", "G", "S", "E", "SIM", "B"]
ignore = [
    "N818",  # Exception name should be named with an Error suffix
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.ruff.lint.pycodestyle]
max-line-length = 117

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
